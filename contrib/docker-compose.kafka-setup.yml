version: "3.2"
services:
    # zookeeper
    zk1:
        image: confluentinc/cp-zookeeper:3.3.0
        networks:
            - functions
        environment:
            ZOOKEEPER_SERVER_ID: 1
            ZOOKEEPER_CLIENT_PORT: 2181
        ports:
            - "2181:2181"
        deploy:
            placement:
                constraints:
                    - 'node.platform.os == linux'

    # kafka brokers
    kafka1:
        image: confluentinc/cp-kafka:3.3.0
        networks:
            - functions
        depends_on:
            - zk1
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zk1:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
            # don't use auto-gen topic, create topics with desired partitions & replicas at below
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
            # set replica-factor to 1 (default 3) since we have less than 3 brokers 
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        deploy:
            placement:
                constraints:
                    - 'node.platform.os == linux'

    kafka2:
        image: confluentinc/cp-kafka:3.3.0
        networks:
            - functions
        depends_on:
            - zk1
        environment:
            KAFKA_BROKER_ID: 2
            KAFKA_ZOOKEEPER_CONNECT: zk1:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
            # don't use auto-gen topic, create topics with desired partitions & replicas at below
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
            # set replica-factor to 1 (default 3) since we have less than 3 brokers 
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        deploy:
            placement:
                constraints:
                    - 'node.platform.os == linux'

    # add kafka topic "faas-request" with desired partitions and replicas
    addtopics:
        image: confluentinc/cp-kafka:3.3.0
        networks:
            - functions
        depends_on:
            - zk1
        deploy:
            restart_policy:
                condition: none  #run just once
            placement:
                constraints:
                    - 'node.platform.os == linux'
        environment:
            topics: faas-request # ,other-topics
            num_partitions: 10
            num_replicas: 1
            kafka_brokers: kafka1,kafka2
            kafka_port: 9092
            zookeeper_server: zk1:2181
        #wait for all kafka brokers up and create topics
        command: sh -c 'IFS=,; for brok in $$kafka_brokers;do while ! nc -z $$brok $$kafka_port;do echo "wait for kafka brokers...";sleep 1;done; done; for topic in $$topics; do while ! kafka-topics --zookeeper $$zookeeper_server --create --topic $$topic --partitions $$num_partitions --replication-factor $$num_replicas; do sleep 1; done; done'

networks:
    functions:
        external: true
